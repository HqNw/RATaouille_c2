#######################################################
# THIS FILE IS JUST FOR DEVELOPMENT PURPOSES ONLY!!!! #
#######################################################
services:

############################################
################  FRONTEND  ################
############################################

  frontend:
    build:
      context: ./
      dockerfile: dockerfile
      target: frontend-dev
    develop:
      watch:
        - path: ./frontend/package.json
          action: rebuild
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
    volumes:
      - ./frontend/src:/app/client/src
      - ./frontend/public:/app/client/public
      - ./frontend/index.html:/app/client/index.html
      - ./frontend/vite.config.ts:/app/client/vite.config.ts
      - ./frontend/tailwind.config.js:/app/client/tailwind.config.js
      - ./frontend/tsconfig.json:/app/client/tsconfig.json
      - ./frontend/tsconfig.app.json:/app/client/tsconfig.app.json
      - ./frontend/tsconfig.node.json:/app/client/tsconfig.node.json
    ports:
      - 5173:5173
    networks:
      - backend_network
    depends_on:
      - backend


###################################################
################  BACKEND STAGES  #################
###################################################
  backend:
    build:
      context: ./
      dockerfile: dockerfile
      target: backend-base
    develop:
      watch:
        - path: ./backend/requirements.txt
          action: rebuild

        - path: ./backend/main.py
          action: sync
          target: /app/backend/main.py
        - path: ./backend/lib/
          action: sync
          target: /app/backend/lib/

    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ./backend:/app/backend
    ports:
      - 8000:5000
    networks:
      - rat_network
      - backend_network
    depends_on:
      - c2server


###################################################
################  C2 SERVER STAGE  ################
###################################################
  c2server:
    build:
      context: ./
      dockerfile: dockerfile
      target: c2server-dev
    develop:
      watch:
        - path: ./c2_server/Cargo.toml
          action: rebuild
    environment:
      - RUST_BACKTRACE=1
    volumes:
      - ./rat_c2_server/src:/app/c2_server/src
      - ./rat_c2_server/Cargo.toml:/app/c2_server/Cargo.toml
      - ./rat_c2_server/Cargo.lock:/app/c2_server/Cargo.lock
      - ./rat_c2_server/rats.db:/app/c2_server/rats.db
      - ./rat_c2_server/downloads:/app/c2_server/downloads
      # Don't mount target directory to avoid build issues
      - /app/c2_server/target
    ports:
      - 9001:9001
      - 9002:9002
    networks:
      - rat_network





  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel_project
    network_mode: host
    # restart: unless-stopped
    command: tunnel --config /etc/cloudflared/config.yml run
    volumes:
      - ./.cloudflared:/etc/cloudflared:ro
    environment:
      - TUNNEL_ORIGIN_CERT=/etc/cloudflared/cert.pem



networks:
  rat_network:
    driver: bridge
  backend_network:
    driver: bridge